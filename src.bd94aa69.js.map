{"version":3,"sources":["js/page-render.js","js/TimerConstruct.js","index.js"],"names":["TimerConstruct","targetTime","onTick","setInterval","curentTime","Date","now","time","timeCount","getTimeComponennt","days","pad","Math","floor","hours","mins","secs","val","String","padStart","document","body","insertAdjacentHTML","refs","pageTimer","querySelector","updateTimerFace","textContent","timer","CountdownTimer","start"],"mappings":";;;;;AAuBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAvBc,IAAA,EAAA,WACb,MAAA,0iBAsBD,QAAA,QAAA;;ACCE,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAxBkBA,IAAAA,EAAAA,WACiB,SAAA,EAAA,GAAtBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAU,EAAA,KAAA,GAC7BD,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EAqBf,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAnBD,MAAA,WAAQ,IAAA,EAAA,KACNC,YAAY,WACJC,IAAAA,EAAaC,KAAKC,MAClBC,EAAO,EAAKN,WAAaG,EACzBI,EAAY,EAAKC,kBAAkBF,GACzC,EAAKL,OAAOM,IACX,OAaJ,CAAA,IAAA,oBAXD,MAAA,SAAkBD,GAOT,MAAA,CAAEG,KANI,KAAKC,IAAIC,KAAKC,MAAMN,EAAQ,QAM1BO,MALD,KAAKH,IACjBC,KAAKC,MAAON,EAAQ,MAAyB,OAIzBQ,KAFT,KAAKJ,IAAIC,KAAKC,MAAON,EAAQ,KAAoB,MAElCS,KADf,KAAKL,IAAIC,KAAKC,MAAON,EAAQ,IAAc,SAKzD,CAAA,IAAA,MAFD,MAAA,SAAIU,GACKC,OAAAA,OAAOD,GAAKE,SAAS,EAAG,SAChC,EAxBkBnB,GAwBlB,QAAA,QAAA;;ACEH,aA1BA,QAAA,eACA,IAAA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,wBAwBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAtBAoB,SAASC,KAAKC,mBAAmB,cAAc,EAA/C,EAAA,YAEA,IAAMC,EAAO,CACXC,UAAWJ,SAASC,KACpBX,KAAMU,SAASK,cAAc,uBAC7BX,MAAOM,SAASK,cAAc,wBAC9BV,KAAMK,SAASK,cAAc,uBAC7BT,KAAMI,SAASK,cAAc,wBAGzBC,EAAkB,SAAuC,GAA3BhB,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACrDO,EAAKb,KAAKiB,YAAiBjB,GAAAA,OAAAA,GAC3Ba,EAAKT,MAAMa,YAAiBb,GAAAA,OAAAA,GAC5BS,EAAKR,KAAKY,YAAiBZ,GAAAA,OAAAA,GAC3BQ,EAAKP,KAAKW,YAAiBX,GAAAA,OAAAA,IAGvBY,EAAQ,IAAIC,EAAJ,QAAmB,CAC/B5B,WAAY,IAAII,KAAK,gBACrBH,OAAQwB,IAGVE,EAAME","file":"src.bd94aa69.js","sourceRoot":"..\\src","sourcesContent":["export default () => {\r\n  return `\r\n  <div class=\"timer\" id=\"timer-1\">\r\n  <div class=\"field\">\r\n    <span class=\"value\" data-value=\"days\">--</span>\r\n    <span class=\"label\">Days</span>\r\n  </div>\r\n\r\n  <div class=\"field\">\r\n    <span class=\"value\" data-value=\"hours\">--</span>\r\n    <span class=\"label\">Hours</span>\r\n  </div>\r\n\r\n  <div class=\"field\">\r\n    <span class=\"value\" data-value=\"mins\">--</span>\r\n    <span class=\"label\">Minutes</span>\r\n  </div>\r\n\r\n  <div class=\"field\">\r\n    <span class=\"value\" data-value=\"secs\">--</span>\r\n    <span class=\"label\">Seconds</span>\r\n  </div>\r\n</div>`;\r\n};\r\n","export default class TimerConstruct {\r\n  constructor({ targetTime, onTick }) {\r\n    this.targetTime = targetTime;\r\n    this.onTick = onTick;\r\n  }\r\n  start() {\r\n    setInterval(() => {\r\n      const curentTime = Date.now();\r\n      const time = this.targetTime - curentTime;\r\n      const timeCount = this.getTimeComponennt(time);\r\n      this.onTick(timeCount);\r\n    }, 1000);\r\n  }\r\n  getTimeComponennt(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    return { days, hours, mins, secs };\r\n  }\r\n  pad(val) {\r\n    return String(val).padStart(2, '0');\r\n  }\r\n}\r\n","import './css/*.css';\r\nimport pageRender from './js/page-render';\r\nimport CountdownTimer from './js/TimerConstruct';\r\n\r\ndocument.body.insertAdjacentHTML('afterbegin', pageRender());\r\n\r\nconst refs = {\r\n  pageTimer: document.body,\r\n  days: document.querySelector('[data-value=\"days\"]'),\r\n  hours: document.querySelector('[data-value=\"hours\"]'),\r\n  mins: document.querySelector('[data-value=\"mins\"]'),\r\n  secs: document.querySelector('[data-value=\"secs\"]'),\r\n};\r\n\r\nconst updateTimerFace = function ({ days, hours, mins, secs }) {\r\n  refs.days.textContent = `${days}`;\r\n  refs.hours.textContent = `${hours}`;\r\n  refs.mins.textContent = `${mins}`;\r\n  refs.secs.textContent = `${secs}`;\r\n};\r\n\r\nconst timer = new CountdownTimer({\r\n  targetTime: new Date('Aug 19, 2021'),\r\n  onTick: updateTimerFace,\r\n});\r\n\r\ntimer.start();\r\n"]}